package com.reactive.examples;

import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.extension.ExtendWith;
import org.springframework.boot.test.autoconfigure.web.reactive.AutoConfigureWebTestClient;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.context.ActiveProfiles;
import org.springframework.test.context.junit.jupiter.SpringExtension;

@ExtendWith(SpringExtension.class)
@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
@DirtiesContext
@AutoConfigureWebTestClient
@ActiveProfiles("test")
@Slf4j
public class EmployeeControllerTest {

//    @Autowired
//    private WebTestClient webTestClient;
//
//    @Autowired
//    private TownRepository townRepository;
//
//
//    @Autowired
//    private DatabaseClient databaseClient;


//    private List<User> getData() {
//        return Arrays.asList(new User(null, "Suman Das", 30, 10000, null),
//                new User(null, "Arjun Das", 5, 1000, null),
//                new User(null, "Saurabh Ganguly", 40, 1000000, null));
//    }

//    @BeforeEach
//    public void setup() {
//        List<String> statements = Arrays.asList("DROP TABLE IF EXISTS users ;",
//                "CREATE TABLE users ( id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, name VARCHAR(100) NOT NULL, age integer,salary decimal);");
//
//        statements.forEach(it -> databaseClient.sql(it)
//                .fetch()
//                .rowsUpdated()
//                .block());
//
//        userRepository.deleteAll()
//                .thenMany(Flux.fromIterable(getData()))
//                .flatMap(userRepository::save)
//                .doOnNext(user -> {
//                    System.out.println("User Inserted from UserControllerTest: " + user);
//                })
//                .blockLast();
//
//    }

//    @Test
//    public void getAllUsersValidateCount() {
//        webTestClient.get().uri("/users").exchange()
//                .expectStatus().isOk()
//                .expectHeader().contentType(MediaType.APPLICATION_JSON_VALUE)
//                .expectBodyList(Employee.class)
//                .hasSize(3)
//                .consumeWith(user -> {
//                    List<Employee> employees = user.getResponseBody();
//                    employees.forEach(u -> {
//                        assertTrue(u.getId() != null);
//                    });
//                });
//    }

//    @Test
//    public void getAllUsersValidateResponse() {
//        Flux<Employee> userFlux = webTestClient.get().uri("/users").exchange()
//                .expectStatus().isOk()
//                .expectHeader().contentType(MediaType.APPLICATION_JSON_VALUE)
//                .returnResult(Employee.class)
//                .getResponseBody();
//        StepVerifier.create(userFlux.log("Receiving values !!!"))
//                .expectNextCount(3)
//                .verifyComplete();
//
//    }
//
//    @Test
//    public void getUserById() {
//        webTestClient.get().uri("/users".concat("/{userId}"), "1")
//                .exchange().expectStatus().isOk()
//                .expectBody()
//                .jsonPath("$.name", "Suman Das");
//    }
//
//    @Test
//    public void getUserById_NotFound() {
//        webTestClient.get().uri("/users".concat("/{userId}"), "6")
//                .exchange().expectStatus().isNotFound();
//    }

//    @Test
//    public void createUser() {
//        User user = new User(null, "Rahul Dravid", 45, 5555555, null);
//        webTestClient.post().uri("/users").contentType(MediaType.valueOf(MediaType.APPLICATION_JSON_VALUE))
//                .body(Mono.just(user), User.class)
//                .exchange()
//                .expectStatus().isCreated()
//                .expectBody()
//                .jsonPath("$.id").isNotEmpty()
//                .jsonPath("$.name").isEqualTo("Rahul Dravid");
//    }

//    @Test
//    public void deleteUser() {
//        webTestClient.delete().uri("/users".concat("/{userId}"), "1")
//                .accept(MediaType.valueOf(MediaType.APPLICATION_JSON_VALUE))
//                .exchange()
//                .expectStatus().isOk()
//                .expectBody(Void.class);
//    }

//    @Test
//    public void updateUser() {
//        double newsalary = 12345;
//        User user = new User(null, "Suman Das", 31, newsalary, null);
//        webTestClient.put().uri("/users".concat("/{userId}"), "1")
//                .contentType(MediaType.valueOf(MediaType.APPLICATION_JSON_VALUE))
//                .accept(MediaType.valueOf(MediaType.APPLICATION_JSON_VALUE))
//                .body(Mono.just(user), User.class)
//                .exchange()
//                .expectStatus().isOk()
//                .expectBody()
//                .jsonPath("$.salary").isEqualTo(newsalary);
//    }

//    @Test
//    public void updateUser_notFound() {
//        double newsalary = 12345;
//        User user = new User(null, "Suman Das", 31, newsalary, null);
//        webTestClient.put().uri("/users".concat("/{userId}"), "6")
//                .contentType(MediaType.valueOf(MediaType.APPLICATION_JSON_VALUE))
//                .accept(MediaType.valueOf(MediaType.APPLICATION_JSON_VALUE))
//                .body(Mono.just(user), User.class)
//                .exchange()
//                .expectStatus().isBadRequest();
//    }

}